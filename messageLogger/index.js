(function(i,c,a,f,h,t,y,A,M){"use strict";a.findByProps("openLazy","hideActionSheet"),a.findByProps("ActionSheetRow"),a.findByProps("push","pop"),a.findByStoreName("ChannelStore");const l=2*24*60*60*1e3;t.storage.messageCache??={},t.storage.deletedMessages??={};const n=[];function E(){const o=Date.now();Object.keys(t.storage.messageCache).forEach(function(e){o-t.storage.messageCache[e].timestamp>l&&delete t.storage.messageCache[e]}),Object.keys(t.storage.deletedMessages).forEach(function(e){t.storage.deletedMessages[e]=t.storage.deletedMessages[e].filter(function(s){return o-new Date(s.deletedTimestamp).getTime()<l})})}function S(o){if(!o?.id||!o.content||o.author?.bot)return;const e=t.storage.messageCache[o.id];t.storage.messageCache[o.id]={content:o.content,author:o.author?.username??"unknown",timestamp:Date.now(),editHistory:e?.editHistory??[]}}let g=!1;var b={onLoad:function(){E(),n.push(c.FluxDispatcher.subscribe("MESSAGE_CREATE",function({message:e}){return S(e)})),n.push(c.FluxDispatcher.subscribe("MESSAGE_UPDATE",function({message:e}){const s=t.storage.messageCache[e.id];if(s&&e.content&&s.content!==e.content){const r=s.editHistory??[];r.push({content:s.content,timestamp:s.timestamp}),t.storage.messageCache[e.id]={...s,content:e.content,timestamp:Date.now(),editHistory:r}}})),n.push(c.FluxDispatcher.subscribe("MESSAGE_DELETE",function(e){const s=t.storage.messageCache[e.id];s&&(t.storage.deletedMessages[e.channelId]??=[],t.storage.deletedMessages[e.channelId].unshift({id:e.id,content:s.content,author:s.author,deletedTimestamp:new Date().toISOString()}),t.storage.deletedMessages[e.channelId].length>100&&t.storage.deletedMessages[e.channelId].pop(),delete t.storage.messageCache[e.id])}));const o=a.findByName("ChannelHeader",!1);o?n.push(y.after("default",o,function(e,s){const r=e[0]?.channelId;if(!r||g||!(t.storage.deletedMessages[r]?.length>0))return;g=!0;const d=s?.props?.children;if(!d){f.showToast("No children found in ChannelHeader");return}const w=Array.isArray(d)?d:[d],u=new Set;for(const p of w)if(p?.props){const C=Object.keys(p.props);C.length>0&&u.add(`[${C.join(", ")}]`)}const m=Array.from(u).join(`
`);M.showConfirmationAlert({title:"Second Level Prop Keys",content:m||"No 2nd-level components with props found.",confirmText:"Copy",onConfirm:function(){c.clipboard.setString(m),f.showToast("Copied to clipboard.")},cancelText:"Close"})})):h.logger.error("MessageLogger: Could not find ChannelHeader component"),h.logger.log("MessageLogger loaded for debugging component tree.")},onUnload:function(){n.forEach(function(o){return o?.()}),n.length=0,g=!1,h.logger.log("MessageLogger unloaded.")}};return i.default=b,Object.defineProperty(i,"__esModule",{value:!0}),i})({},vendetta.metro.common,vendetta.metro,vendetta.ui.toasts,vendetta,vendetta.plugin,vendetta.patcher,vendetta.ui.components,vendetta.ui.alerts);
