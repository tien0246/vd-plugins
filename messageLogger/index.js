(function(n,g,d,o,r){"use strict";let s;var c={onLoad:function(){o.showToast("MessageLogger: onLoad called (v2)"),r.logger.log("MessageLogger loaded.");const a=d.findByStoreName("MessageStore");if(!a){o.showToast("ML Error: Could not find MessageStore!");return}s=g.FluxDispatcher.subscribe("MESSAGE_DELETE",function(t){o.showToast("ML: MESSAGE_DELETE received!");try{const e=a.getMessage(t.channelId,t.id);if(e&&e.content){const l=e.author?.username??"unknown";o.showToast(`Deleted from ${l}: ${e.content}`)}else o.showToast(`ML: Deleted msg [${t.id}] not in cache or has no content.`)}catch(e){r.logger.error("MessageLogger: Error in MESSAGE_DELETE",e),o.showToast(`ML Error: ${e.message}`)}})},onUnload:function(){s?.(),r.logger.log("MessageLogger unloaded.")}};return n.default=c,Object.defineProperty(n,"__esModule",{value:!0}),n})({},vendetta.metro.common,vendetta.metro,vendetta.ui.toasts,vendetta);
